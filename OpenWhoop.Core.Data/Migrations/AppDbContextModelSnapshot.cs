// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpenWhoop.Core.Data;

#nullable disable

namespace OpenWhoop.Core.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("OpenWhoop.Core.Entities.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ActivityId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AverageHeartRate")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now', 'utc')");

                    b.Property<double?>("Distance")
                        .HasColumnType("REAL");

                    b.Property<DateTimeOffset>("End")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Kilojoules")
                        .HasColumnType("REAL");

                    b.Property<int?>("MaxHeartRate")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Score")
                        .HasColumnType("REAL");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SportId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("Start")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Strain")
                        .HasColumnType("REAL");

                    b.Property<string>("TimezoneOffset")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now', 'utc')");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Zone0Duration")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Zone1Duration")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Zone2Duration")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Zone3Duration")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Zone4Duration")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Zone5Duration")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId")
                        .IsUnique();

                    b.HasIndex("End");

                    b.HasIndex("Start");

                    b.HasIndex("UserId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("OpenWhoop.Core.Entities.HeartRateSample", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ActivityId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now', 'utc')");

                    b.Property<string>("RrIntervals")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("SleepCycleId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TimestampUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("SleepCycleId");

                    b.HasIndex("TimestampUtc");

                    b.ToTable("HeartRateSamples");
                });

            modelBuilder.Entity("OpenWhoop.Core.Entities.Packet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Bytes")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now', 'utc')");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Uuid")
                        .IsUnique();

                    b.ToTable("Packets");
                });

            modelBuilder.Entity("OpenWhoop.Core.Entities.SleepCycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ArousalTimeSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AverageHeartRate")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AwakeDurationSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now', 'utc')");

                    b.Property<int?>("CyclesCount")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Disturbances")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("End")
                        .HasColumnType("TEXT");

                    b.Property<double?>("HrvRmssd")
                        .HasColumnType("REAL");

                    b.Property<double?>("Kilojoules")
                        .HasColumnType("REAL");

                    b.Property<int?>("LatencySeconds")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LightSleepDurationSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Nap")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RecoveryScore")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RemSleepDurationSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("RespiratoryRate")
                        .HasColumnType("REAL");

                    b.Property<int?>("RestingHeartRate")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SleepConsistency")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SleepDebtSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("SleepEfficiency")
                        .HasColumnType("REAL");

                    b.Property<long>("SleepId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SleepNeedSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SlowWaveSleepDurationSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("Start")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TimeInBedSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TimezoneOffset")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now', 'utc')");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("End");

                    b.HasIndex("SleepId")
                        .IsUnique();

                    b.HasIndex("Start");

                    b.HasIndex("UserId");

                    b.ToTable("SleepCycles");
                });

            modelBuilder.Entity("OpenWhoop.Core.Entities.SleepEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now', 'utc')");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<long>("SleepId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SleepId");

                    b.HasIndex("Timestamp");

                    b.ToTable("SleepEvents");
                });

            modelBuilder.Entity("OpenWhoop.Core.Entities.StoredDeviceSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DeviceId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("DeviceName")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastConnectedUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now', 'utc')");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("StoredDeviceSettings");
                });

            modelBuilder.Entity("OpenWhoop.Core.Entities.StressSample", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now', 'utc')");

                    b.Property<double>("Score")
                        .HasColumnType("REAL");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Timestamp");

                    b.ToTable("StressSamples");
                });

            modelBuilder.Entity("OpenWhoop.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now', 'utc')");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now', 'utc')");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
